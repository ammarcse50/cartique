generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Product {
  id          Int        @id @default(autoincrement())
  description String?    @db.VarChar(100)
  imageUrl    String?    @db.VarChar(100)
  name        String?    @db.VarChar(50)
  price       Int?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  cartitem    cartitem[]

  @@map("products")
}

model cart {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  userId    Int?
  items     cartitem[]
}

model cartitem {
  id        Int     @id @default(autoincrement())
  productId Int
  quantity  Int
  cartId    Int
  cart      cart    @relation(fields: [cartId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model account {
  id                Int     @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
}

model session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique(map: "Session_sessionToken_key")
  userId       Int
  expires      DateTime
}

model user {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?
  emailVerified DateTime? @updatedAt
  image         String?
  password      String
}

model verificationtoken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique(map: "VerificationToken_token_key")
  expires    DateTime
}
